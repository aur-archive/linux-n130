# Maintainer: DonVla <donvla@users.sourceforge.net>
# linux-n130 install file

KERNEL_NAME=-N130
KERNEL_VERSION=3.8.1-1-N130

# set a sane PATH to ensure that critical utils like depmod will be found
export PATH='/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'

_rundepmod() {
  # updating module dependencies
  echo ">>> Updating module dependencies. Please wait ..."
  depmod "$KERNEL_VERSION"
}

post_install() {
  _rundepmod
  echo ">>>"
  echo ">>> This kernel uses no initrd by default, so you should remove"
  echo ">>> the initrd line from your kernel boot options."
  echo ">>> Because of this no udev is loaded during early booting,"
  echo ">>> so you should not use persistent naming (eg. LABEL or UUID)"
  echo ">>> for the 'root=' or 'resume=' kernel boot options."
  echo ">>> If you want to use initrd or added any HOOKS to /etc/mkinitcpio-N130.conf"
  echo ">>> you might want to run \"mkinitcpio -p linux-N130\"."
  echo ">>> Change then your kernel boot options accordingly."
}

post_upgrade() {
  pacman -Q grub &>/dev/null
  hasgrub=$?
  pacman -Q grub2 &>/dev/null
  hasgrub2=$?
  pacman -Q lilo &>/dev/null
  haslilo=$?
  # reminder notices
  if [ $haslilo -eq 0 ]; then
    echo ">>>"
    if [ $hasgrub -eq 0 -o $hasgrub2 -eq 0 ]; then
      echo ">>> If you use the LILO bootloader, you should run 'lilo' before rebooting."
    else
      echo ">>> You appear to be using the LILO bootloader. You should run"
      echo ">>> 'lilo' before rebooting."
    fi
    echo ">>>"
  fi

  if grep "^[^#]*/boot" /etc/fstab 2>&1 >/dev/null; then
    if ! grep "/boot" /etc/mtab 2>&1 >/dev/null; then
      echo "WARNING: /boot appears to be a seperate partition but is not mounted"
      echo "         This is most likely not what you want.  Please mount your /boot"
      echo "         partition and reinstall the kernel unless you are sure this is OK"
    fi
  fi

  _rundepmod
}

post_remove() {
  [[ -f "/boot/linux${KERNEL_NAME}.img" ]] && rm -f /boot/linux${KERNEL_NAME}.img
  [[ -f "/boot/linux${KERNEL_NAME}-fallback.img" ]] && rm -f /boot/linux${KERNEL_NAME}-fallback.img
}
